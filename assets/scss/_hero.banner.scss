#hero-banner {
  height: 95vh;
  position: relative; // <- pour ancrer les enfants positionnés
  border-bottom: 2px solid black;

  .top-bar {
    display: flex;
    flex-direction: row;
    gap: 50px;
    align-items: center; // centre verticalement les éléments de la barre
    border-bottom: 2px solid black;
  }

  .hero-content-right {
    position: absolute;
    bottom: 0; // bas
    right: 0; // droite
    display: flex;
    flex-direction: row;
    width: 40vh;
    transform: translateX(-40%);
    .hero-content-left img {
      width: 100%;
    }
  }

  .hero-content-left {
    display: flex;
    flex-direction: column;
    width: 60vh;
    height: 100%;
    align-items: center;
    padding-top: 40vh;

    .btn {
      font-size: 40px;
      font-family: "Tomorrow", sans-serif;
      font-weight: 200;
      font-style: italic;
      color: #fff;
      background: rgba(255, 255, 255, 0.08);
      border: 1px solid rgba(255, 255, 255, 0.25);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25),
        inset 0 1px 0 rgba(255, 255, 255, 0.15),
        inset 0 -1px 0 rgba(255, 255, 255, 0.05);
      -webkit-backdrop-filter: blur(4px) saturate(120%);
      backdrop-filter: blur(4px) saturate(120%);

      padding: 0.6em 1.2em;
      border-radius: 12px;
    }
    font-size: 50px;

    /* Hover/active/focus pour un rendu premium */
    .btn:hover {
      background: rgba(255, 255, 255, 0.12);
      border-color: rgba(255, 255, 255, 0.35);
      transform: translateY(-2px);
      box-shadow: 0 14px 36px rgba(0, 0, 0, 0.32),
        inset 0 1px 0 rgba(255, 255, 255, 0.25);
    }

    .btn:active {
      transform: translateY(0);
      box-shadow: 0 6px 18px rgba(0, 0, 0, 0.28),
        inset 0 1px 0 rgba(255, 255, 255, 0.15);
    }

    /* Accessibilité focus visible */
    .btn:focus-visible {
      outline: 2px solid rgba(255, 255, 255, 0.9);
      outline-offset: 3px;
      border-color: rgba(255, 255, 255, 0.6);
    }
  }
}

/* Accessibilité pour le SVG invisible */
.visually-hidden {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 1px, 1px);
  white-space: nowrap;
  border: 0;
}

#hero-banner {
  position: relative;
  overflow: hidden; /* pour que les bordures puissent venir de dehors */

  /* === Cadre animé (4 traits) === */
  .border-frame {
    pointer-events: none;
    position: absolute;
    inset: 0;

    .h,
    .v {
      position: absolute;
      background: #000;
      will-change: transform;
    }
    .h {
      height: 2px;
      width: 100%;
      transform: scaleX(0);
    }
    .v {
      width: 2px;
      height: 100%;
      transform: scaleY(0);
    }

    .top {
      top: 0;
      left: 0;
      transform-origin: left center;
    }
    .bottom {
      bottom: 0;
      left: 0;
      transform-origin: right center;
    }
    .left {
      top: 0;
      left: 0;
      transform-origin: center top;
    }
    .right {
      top: 0;
      right: 0;
      transform-origin: center bottom;
    }
  }

  /* Quand le hero devient visible, on “déploie” les traits */
  &.is-in .border-frame {
    .top {
      animation: frameX 900ms cubic-bezier(0.22, 0.61, 0.36, 1) forwards 60ms;
    }
    .bottom {
      animation: frameX 900ms cubic-bezier(0.22, 0.61, 0.36, 1) forwards 160ms;
    }
    .left {
      animation: frameY 900ms cubic-bezier(0.22, 0.61, 0.36, 1) forwards 260ms;
    }
    .right {
      animation: frameY 900ms cubic-bezier(0.22, 0.61, 0.36, 1) forwards 360ms;
    }
  }

  @keyframes frameX {
    to {
      transform: scaleX(1);
    }
  }
  @keyframes frameY {
    to {
      transform: scaleY(1);
    }
  }

  /* === Glitch texte (léger, lisible) === */
  .glitch-text {
    position: relative;
    display: inline-block;
    will-change: transform, text-shadow;
    /* couches colorées */
    &::before,
    &::after {
      content: attr(data-text);
      position: absolute;
      inset: 0;
      mix-blend-mode: screen;
      pointer-events: none;
      opacity: 0.55;
    }
    &::before {
      transform: translate(0, 0);
      color: #f00;
    }
    &::after {
      transform: translate(0, 0);
      color: #0ff;
    }

    /* déclenchement */
    #hero-banner.is-in & {
      animation: textGlitch 2.4s steps(12) 200ms both;
      &::before {
        animation: textShift 2.4s steps(12) 200ms both;
      }
      &::after {
        animation: textShift2 2.4s steps(12) 200ms both;
      }
    }

    &.--sub {
      opacity: 0.9;
      font-weight: 500;
    }
  }

  @keyframes textGlitch {
    0%,
    15% {
      transform: none;
      text-shadow: 0 0 0 transparent;
    }
    16% {
      transform: skewX(8deg);
    }
    17% {
      transform: skewX(-6deg);
    }
    18% {
      transform: none;
    }
    45% {
      transform: translateX(0);
    }
    46% {
      transform: translateX(-1px);
    }
    47% {
      transform: translateX(1px);
    }
    48%,
    100% {
      transform: none;
    }
  }
  @keyframes textShift {
    0%,
    15% {
      transform: translate(0, 0);
    }
    16% {
      transform: translate(-1px, 0);
    }
    17% {
      transform: translate(1px, 0);
    }
    48%,
    100% {
      transform: translate(0, 0);
    }
  }
  @keyframes textShift2 {
    0%,
    15% {
      transform: translate(0, 0);
    }
    16% {
      transform: translate(1px, 0);
    }
    17% {
      transform: translate(-1px, 0);
    }
    48%,
    100% {
      transform: translate(0, 0);
    }
  }

  /* === Glitch bouton (petit écho) === */
  .glitch-btn {
    position: relative;
    #hero-banner.is-in & {
      animation: btnPop 0.6s cubic-bezier(0.2, 0.8, 0.2, 1) 0.4s both;
    }
    &::after {
      content: attr(aria-label) attr(data-text);
      content: "";
      position: absolute;
      inset: 0;
      border-radius: inherit;
      box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.15);
      opacity: 0;
      pointer-events: none;
    }
    #hero-banner.is-in &::after {
      animation: btnEcho 0.9s ease 0.55s both;
    }
  }
  @keyframes btnPop {
    from {
      transform: translateY(8px);
      opacity: 0;
    }
    to {
      transform: none;
      opacity: 1;
    }
  }
  @keyframes btnEcho {
    0% {
      opacity: 0;
      transform: scale(0.95);
    }
    40% {
      opacity: 0.5;
    }
    100% {
      opacity: 0;
      transform: scale(1.06);
    }
  }

  /* === Glitch image (filtre displacement + secousses brèves) === */
  .glitch-pic img {
    display: block;
    will-change: filter, transform;
    #hero-banner.is-in & {
      animation: imgJitter 1.8s steps(10) 0.25s both;
      filter: url(#glitchShift);
    }
  }
  @keyframes imgJitter {
    0%,
    30% {
      transform: translate(0, 0);
    }
    32% {
      transform: translate(-1px, 0);
    }
    34% {
      transform: translate(1px, 0);
    }
    36% {
      transform: translate(0, 0);
    }
    70% {
      transform: none;
    }
    72% {
      transform: translateY(-1px);
    }
    74%,
    100% {
      transform: none;
    }
  }

  /* Respect des préférences utilisateur */
  @media (prefers-reduced-motion: reduce) {
    .border-frame .h,
    .border-frame .v,
    .glitch-text,
    .glitch-text::before,
    .glitch-text::after,
    .glitch-btn,
    .glitch-btn::after,
    .glitch-pic img {
      animation: none !important;
      transform: none !important;
      filter: none !important;
    }
  }
}
